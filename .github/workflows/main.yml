name: Oh Eye Dee See
on:
  workflow_dispatch
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout
jobs:
  job:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository code
      id: checkout-repository
      uses: actions/checkout@v4
    - name: Setup OPA
      id: setup-opa
      uses: open-policy-agent/setup-opa@v2
      with:
        version: latest
    - uses: actions/github-script@v7
      id: id-provider-script-get-token-url
      timeout-minutes: 10
      with:
        debug: true
        script: |
          const token = process.env['ACTIONS_RUNTIME_TOKEN']
          const runtimeUrl = process.env['ACTIONS_ID_TOKEN_REQUEST_URL']
          core.setOutput('TOKEN', token.trim())
          core.setOutput('IDTOKENURL', runtimeUrl.trim())
    - id: id-provider-get-idtoken    
      run: |
        IDTOKEN=$(curl -H "Authorization: Bearer ${{steps.id-provider-script-get-token-url.outputs.TOKEN}}" ${{steps.id-provider-script-get-token-url.outputs.IDTOKENURL}}  -H "Accept: application/json; api-version=2.0" -H "Content-Type: application/json" -d "{}" | jq -r '.value')
        echo $IDTOKEN
        jwtd() {
            if [[ -x $(command -v jq) ]]; then
                jq -R 'split(".") | .[0],.[1] | @base64d | fromjson' <<< "${1}"
                echo "Signature: $(echo "${1}" | awk -F'.' '{print $3}')"
            fi
        }
        jwtd $IDTOKEN
        echo "idToken=${IDTOKEN}" >> $GITHUB_OUTPUT
      
    - id: print-id-token-temp
      uses: actions/github-script@v7
      timeout-minutes: 10
      with:
        debug: true
        script: |
          const token = "${{ steps.id-provider-get-idtoken.outputs.IDTOKEN }}"
          token_arr = token.split(".")
          console.log("printing the header")
          console.log(token_arr[0].substr(1))
          console.log("printing the token")
          console.log(token_arr)
